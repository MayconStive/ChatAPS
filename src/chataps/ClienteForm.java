package chataps;

import java.awt.Cursor;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultCaret;

/**
 *
 * @author iagocolodetti
 */
public class ClienteForm extends javax.swing.JFrame {

    private final int MIN_PORTA = 0;
    private final int MAX_PORTA = 65535;

    private Cliente cliente;
    
    private final DefaultTableModel jtParticipantesModel;

    /**
     * Creates new form ClienteForm
     */
    public ClienteForm() {
        initComponents();
        
        txfPorta.setEditable(false);
        txfPorta.setText("1010");

        jtaChat.setEditable(false);
        jtaChat.setCursor(new Cursor(Cursor.TEXT_CURSOR));

        DefaultCaret caret = (DefaultCaret) jtaChat.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        
        jtParticipantesModel = (DefaultTableModel) jtParticipantes.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        btnConectar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaChat = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtaMensagem = new javax.swing.JTextArea();
        btnEnviar = new javax.swing.JButton();
        btnLimparMensagem = new javax.swing.JButton();
        btnLimparChat = new javax.swing.JButton();
        lblNome = new javax.swing.JLabel();
        txfNome = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtParticipantes = new javax.swing.JTable();
        lblPorta = new javax.swing.JLabel();
        txfPorta = new javax.swing.JTextField();
        lblIP = new javax.swing.JLabel();
        txfIP = new javax.swing.JTextField();
        lblLogo = new javax.swing.JLabel();
        lblSlogan = new javax.swing.JLabel();
        lblDenuncie = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SOS Queimadas - CidadÃ£o");
        setName("ClienteForm"); // NOI18N
        setResizable(false);

        btnConectar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnConectar.setText("CONECTAR");
        btnConectar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnConectarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chat", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jtaChat.setColumns(20);
        jtaChat.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtaChat.setLineWrap(true);
        jtaChat.setRows(5);
        jtaChat.setWrapStyleWord(true);
        jtaChat.setFocusable(false);
        jScrollPane1.setViewportView(jtaChat);

        jtaMensagem.setColumns(20);
        jtaMensagem.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtaMensagem.setLineWrap(true);
        jtaMensagem.setRows(3);
        jtaMensagem.setWrapStyleWord(true);
        jtaMensagem.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jtaMensagemKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                jtaMensagemKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jtaMensagem);

        btnEnviar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnEnviar.setText("Enviar");
        btnEnviar.setEnabled(false);
        btnEnviar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnEnviarActionPerformed(evt);
            }
        });

        btnLimparMensagem.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnLimparMensagem.setText("Limpar Mensagem");
        btnLimparMensagem.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnLimparMensagem.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnLimparMensagemActionPerformed(evt);
            }
        });

        btnLimparChat.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnLimparChat.setText("Limpar Chat");
        btnLimparChat.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnLimparChat.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnLimparChatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnLimparChat, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLimparMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 144, Short.MAX_VALUE)
                        .addComponent(btnEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnLimparChat)
                        .addComponent(btnLimparMensagem))
                    .addComponent(btnEnviar))
                .addContainerGap())
        );

        lblNome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblNome.setText("Nome");

        txfNome.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txfNome.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Participantes", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jtParticipantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Nome"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jtParticipantes.setRowSelectionAllowed(false);
        jScrollPane3.setViewportView(jtParticipantes);
        if (jtParticipantes.getColumnModel().getColumnCount() > 0)
        {
            jtParticipantes.getColumnModel().getColumn(0).setResizable(false);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        lblPorta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPorta.setText("Porta");

        txfPorta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txfPorta.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblIP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblIP.setText("IP");

        txfIP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txfIP.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblLogo.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chataps/images/sos queimadas.png"))); // NOI18N
        lblLogo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblLogo.setMaximumSize(null);
        lblLogo.setMinimumSize(null);

        lblSlogan.setFont(new java.awt.Font("Bodoni MT Black", 1, 12)); // NOI18N
        lblSlogan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSlogan.setText("Sistema de denÃºncias de queimadas ilegais nas matas brasileiras");

        lblDenuncie.setFont(new java.awt.Font("Bodoni MT Black", 1, 18)); // NOI18N
        lblDenuncie.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDenuncie.setText("Denuncie");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(lblDenuncie)))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txfPorta)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(77, 77, 77)
                                    .addComponent(lblPorta))
                                .addComponent(txfIP)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(84, 84, 84)
                                    .addComponent(lblIP))
                                .addComponent(txfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(lblNome))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(btnConectar, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSlogan)
                        .addGap(67, 67, 67)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblSlogan)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDenuncie))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblIP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txfIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPorta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txfPorta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnConectar))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConectarActionPerformed
        if (btnConectar.getText().equals("CONECTAR")) {
            String ip = txfIP.getText().trim();
            if (!ip.isEmpty()) {
                String sPorta = txfPorta.getText().trim();
                if (!sPorta.isEmpty()) {
                    try {
                        int porta = Integer.parseInt(sPorta);
                        if (porta >= MIN_PORTA && porta <= MAX_PORTA) {
                            String nome = txfNome.getText().trim();
                            if (!nome.isEmpty()) {
                                conectar(ip, porta, nome);
                            } else {
                                JOptionPane.showMessageDialog(rootPane, "Digite o nome de usuÃ¡rio que pretende usar.", "Erro", JOptionPane.ERROR_MESSAGE);
                            }
                        } else {
                            JOptionPane.showMessageDialog(rootPane, "O nÃºmero da porta deve ser um inteiro positivo de no mÃ­nimo " + MIN_PORTA + " e no mÃ¡ximo " + MAX_PORTA + ".", "Erro", JOptionPane.ERROR_MESSAGE);
                        }
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(rootPane, "A porta deve ser um nÃºmero inteiro positivo de no mÃ­nimo " + MIN_PORTA + " e no mÃ¡ximo " + MAX_PORTA + ".", "Erro", JOptionPane.ERROR_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Digite a porta do servidor.", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "Digite o ip do servidor.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            addMensagem("VocÃª saiu do chat.");
            desconectar();
        }
    }//GEN-LAST:event_btnConectarActionPerformed

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
        enviarMensagem();
    }//GEN-LAST:event_btnEnviarActionPerformed

    private void btnLimparMensagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparMensagemActionPerformed
        jtaMensagem.setText("");
    }//GEN-LAST:event_btnLimparMensagemActionPerformed

    private void btnLimparChatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparChatActionPerformed
        jtaChat.setText("");
    }//GEN-LAST:event_btnLimparChatActionPerformed

    private void jtaMensagemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtaMensagemKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            enviarMensagem();
        }
    }//GEN-LAST:event_jtaMensagemKeyPressed

    private void jtaMensagemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtaMensagemKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && btnConectar.getText().equals("DESCONECTAR") && cliente != null) {
            jtaMensagem.setText(jtaMensagem.getText().trim());
        }
    }//GEN-LAST:event_jtaMensagemKeyReleased

    private void addMensagem(String texto) {
        if (jtaChat.getText().toString().isEmpty()) {
            jtaChat.append(texto);
        } else {
            jtaChat.append("\n" + texto);
        }
    }
    
    private void addParticipantes(String[] nomes) {
        for (String nome : nomes) {
            jtParticipantesModel.addRow(new Object[]{ nome });
        }
    }
    
    private void addParticipante(String nome) {
        jtParticipantesModel.addRow(new Object[]{ nome });
    }
    
    private void removerParticipante(String nome) {
        for (int i = 0; i < jtParticipantesModel.getRowCount(); i++) {
            if (jtParticipantesModel.getValueAt(i, 0).equals(nome)) {
                jtParticipantesModel.removeRow(i);
                break;
            }
        }
    }

    private void conectar(String ip, int porta, String nome) {
        txfIP.setEditable(false);
        txfIP.setCursor(new Cursor(Cursor.TEXT_CURSOR));
        txfPorta.setEditable(false);
        txfPorta.setCursor(new Cursor(Cursor.TEXT_CURSOR));
        txfNome.setEditable(false);
        txfNome.setCursor(new Cursor(Cursor.TEXT_CURSOR));
        btnConectar.setText("DESCONECTAR");
        btnEnviar.setEnabled(true);
        cliente = new Cliente(ip, porta, nome);
        Thread thread = new Thread(cliente);
        thread.start();
    }

    private void desconectar() {
        if (cliente != null) {
            cliente.fechar();
        }
        cliente = null;
        txfIP.setEditable(true);
        txfPorta.setEditable(true);
        txfNome.setEditable(true);
        btnConectar.setText("CONECTAR");
        btnEnviar.setEnabled(false);
        jtParticipantesModel.setRowCount(0);
    }
    
    private void enviarMensagem() {
        if (btnConectar.getText().equals("DESCONECTAR") && cliente != null) {
            String mensagem = jtaMensagem.getText();
            if (!mensagem.isEmpty()) {
                try {
                    jtaMensagem.setText("");
                    cliente.enviar(mensagem.trim());
                    jtaMensagem.requestFocus();
                } catch (IOException e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(rootPane, "NÃ£o foi possÃ­vel enviar a mensagem.", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(rootPane, "O campo destinado a mensagem estÃ¡ vazio.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    private void processarMensagem(String mensagem) {
        if (!mensagem.isEmpty()) {
            switch (mensagem.charAt(0)) {
                case 'm':
                    addMensagem(mensagem.substring(1));
                    break;
                case 'e':
                    addMensagem(mensagem.substring(1));
                    addParticipante(mensagem.substring(1, mensagem.indexOf(" ")));
                    break;
                case 's':
                    addMensagem(mensagem.substring(1));
                    removerParticipante(mensagem.substring(1, mensagem.indexOf(" ")));
                    break;
                case 'p':
                    addMensagem("VocÃª entrou no chat.");
                    addParticipantes(mensagem.substring(1).split(" "));
                    break;
            }
        }
    }

    private class Cliente implements Runnable {

        private Socket socket;
        
        private volatile boolean conectado;

        private final String ip;
        private final int porta;
        private final String nome;

        public Cliente(String ip, int porta, String nome) {
            conectado = true;
            this.ip = ip;
            this.porta = porta;
            this.nome = nome;
        }

        public void fechar() {
            conectado = false;
            try {
                if (socket != null) {
                    socket.close();
                }
            } catch (IOException e) {
                e.printStackTrace();
            } finally {
                socket = null;
            }
        }
        
        public void enviar(String mensagem) throws IOException {
            if (conectado) {
                try {
                    DataOutputStream dos = new DataOutputStream(socket.getOutputStream());
                    dos.writeUTF(mensagem.trim());
                    addMensagem("VocÃª: " + mensagem.trim());
                } catch (IOException e) {
                    throw e;
                }
            }
        }

        @Override
        public void run() {
            try {
                socket = new Socket(ip, porta);
                
                try {
                    DataOutputStream dos = new DataOutputStream(socket.getOutputStream());
                    dos.writeUTF(nome);
                } catch (Exception e) {
                    if (conectado) {
                        addMensagem("ConexÃ£o encerrada.");
                    }
                    desconectar();
                    return;
                }
                
                while (conectado) {
                    try {
                        DataInputStream dis = new DataInputStream(socket.getInputStream());
                        String mensagem = dis.readUTF();
                        processarMensagem(mensagem);
                    } catch (IOException e) {
                        if (conectado) {
                            addMensagem("ConexÃ£o encerrada.");
                        }
                        desconectar();
                    }
                }
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(rootPane, "NÃ£o foi possÃ­vel enviar mensagem. NÃ£o hÃ¡ agentes disponÃ­veis.", "Erro", JOptionPane.ERROR_MESSAGE);
                desconectar();
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClienteForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClienteForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClienteForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClienteForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {
                    e.printStackTrace();
                }
                ClienteForm clientForm = new ClienteForm();
                clientForm.setSize(800, 540);
                clientForm.setLocation(
                        (Toolkit.getDefaultToolkit().getScreenSize().width - clientForm.getWidth()) / 2,
                        (Toolkit.getDefaultToolkit().getScreenSize().height - clientForm.getHeight()) / 2);
                clientForm.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConectar;
    private javax.swing.JButton btnEnviar;
    private javax.swing.JButton btnLimparChat;
    private javax.swing.JButton btnLimparMensagem;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jtParticipantes;
    private javax.swing.JTextArea jtaChat;
    private javax.swing.JTextArea jtaMensagem;
    private javax.swing.JLabel lblDenuncie;
    private javax.swing.JLabel lblIP;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblPorta;
    private javax.swing.JLabel lblSlogan;
    private javax.swing.JTextField txfIP;
    private javax.swing.JTextField txfNome;
    private javax.swing.JTextField txfPorta;
    // End of variables declaration//GEN-END:variables
}
